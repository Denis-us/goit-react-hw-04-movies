{"version":3,"sources":["components/SearchFilm/SearchFilm.js","components/SearchFilmList/SearchFilmList.js","pages/MoviesPage/MoviesPage.js","services/movieApi.js","components/SearchFilm/SearchFilm.module.css","components/SearchFilmList/SearchFilmList.module.css"],"names":["SearchFilm","onSubmit","useState","value","setValue","formReset","e","preventDefault","trim","toast","error","className","styles","form","input","type","autoComplete","placeholder","onChange","currentTarget","toLowerCase","btnForm","textBtn","autoClose","FilmsList","films","url","useRouteMatch","location","useLocation","list","map","id","original_title","to","pathname","state","from","MoviesPage","history","useHistory","search","setSearch","setfilms","useEffect","push","moviesAPI","then","response","results","catch","console","log","Error","param","URLSearchParams","get","Container","BASE_URL","API_KEY","fetchTrend","axios","data","fetchMoviesBySearch","page","fetchMovieDetails","movieId","fetchMovieCredits","fetchMoviesReviews","module","exports"],"mappings":"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","file":"static/js/movies-page.4cdcfcc0.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./SearchFilm.module.css\";\n\nexport default function SearchFilm({ onSubmit }) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSearchFilm = (e) => {\n    setValue(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (value.trim() === \"\") {\n      return toast.error(\"Enter correct request!\");\n    }\n    onSubmit(value);\n    formReset();\n  };\n\n  const formReset = () => {\n    setValue(\"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <input\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          value={value}\n          placeholder=\"Search movie\"\n          onChange={handleSearchFilm}\n        />\n        <button type=\"submit\" className={styles.btnForm}>\n          <span className={styles.textBtn}>Search</span>\n        </button>\n      </form>\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nSearchFilm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, useRouteMatch, useLocation } from \"react-router-dom\";\nimport styles from \"./SearchFilmList.module.css\";\n\nexport default function FilmsList({ films }) {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  return (\n    <ul className={styles.list}>\n      {films.map(({ id, original_title }) => (\n        <li key={id}>\n          <Link\n            to={{\n              pathname: `${url}/${id}`,\n              state: { from: location },\n            }}\n          >\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFilmsList.propTypes = {\n  films: PropTypes.array.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as moviesAPI from \"../../services/movieApi\";\nimport Container from \"../../components/Container/Container\";\nimport SearchFilm from \"../../components/SearchFilm/SearchFilm\";\nimport SearchFilmList from \"../../components/SearchFilmList/SearchFilmList\";\n\nexport default function MoviesPage() {\n  const location = useLocation();\n  const history = useHistory();\n\n  const [search, setSearch] = useState(\"\");\n  const [films, setfilms] = useState([]);\n\n  const onSubmitSearch = (value) => {\n    setSearch(value);\n  };\n\n  useEffect(() => {\n    if (search === \"\") {\n      return;\n    }\n    if (search) {\n      history.push({\n        ...location,\n        search: `?query=${search}`,\n      });\n      moviesAPI\n        .fetchMoviesBySearch(search)\n        .then((response) => {\n          setfilms(response.results);\n        })\n        .catch(console.log(Error));\n    }\n  }, [search]);\n\n  useEffect(() => {\n    if (location.search === \"\") {\n      return;\n    }\n    const param = new URLSearchParams(location.search).get(\"query\");\n    setSearch(param);\n  }, [location.search]);\n\n  return (\n    <div>\n      <Container>\n        <SearchFilm onSubmit={onSubmitSearch} />\n      </Container>\n      <Container>\n        <SearchFilmList films={films} />\n      </Container>\n    </div>\n  );\n}\n","import axios from \"axios\";\n// const axios = require('axios');\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"b4cae661bd383c29838501f5623954e9\";\n\nexport function fetchTrend() {\n  return axios\n    .get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`)\n    .then((response) => response.data.results);\n}\n\nexport function fetchMoviesBySearch(search, page = 1) {\n  return axios\n    .get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${search}&page=${page}include_adult=false`\n    )\n    .then((response) => response.data);\n}\n\nexport function fetchMovieDetails(movieId) {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then((response) => response.data);\n}\n\nexport function fetchMovieCredits(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(({ data }) => data);\n}\n\nexport function fetchMoviesReviews(movieId, page = 1) {\n  return axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n    )\n    .then(({ data }) => data);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchFilm_form__2adpx\",\"input\":\"SearchFilm_input__GlTPb\",\"btnForm\":\"SearchFilm_btnForm__19xvl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"SearchFilmList_list__3noWU\"};"],"sourceRoot":""}